{\rtf1\ansi\ansicpg1254\deff0\nouicompat\deflang1055{\fonttbl{\f0\fnil\fcharset162 Calibri;}{\f1\fnil\fcharset238 Calibri;}{\f2\fnil\fcharset0 Calibri;}}
{\colortbl ;\red0\green0\blue255;}
{\*\generator Riched20 10.0.17134}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\b\f0\fs24 Servlet Nedir? Ne \f1\u304?\'ba\f0 e Yarar?\par
\b0\fs22  Kullan\f1\u305?\f0 c\f1\u305?\f0 dan ald\f1\u305?\u287?\u305?\f0  verilere g\f2\lang1033\'f6\f0\lang1055 re sonu\f2\lang1033\'e7\f0\lang1055 lar \f2\lang1033\'fc\f0\lang1055 reten java s\f1\u305?\f0 n\f1\u305?\f0 flar\f1\u305?\f0 d\f1\u305?\f0 r. A\f1\'ba\f0 ama olarak ilk \f2\lang1033\'f6\f0\lang1055 nce kullan\f1\u305?c\u305?dan Server\rquote a istek g\f2\lang1033\'f6nderilir.\f0\lang1055  \f2\lang1033 Server\rquote da bu iste\f1\u287?e ait servlet belirlenir.\f0\lang1055  Servlet bu gelen bilgileri al\f1\u305?r ve olu\'baturulmas\u305? gereken sonu\f2\lang1033\'e7lar\f1\u305? \f2\'fcretir. Genellikle bu sonu\'e7lar HTML sayfas\f1\u305? \'baeklindedir\f0\lang1055 . Servlet olu\f1\'baturdu\u287?u sonucu web sunucusuna g\f2\lang1033\'f6nderir.\f0\lang1055  Web sunucusu Servlet\rquote ten ald\f1\u305?\u287?\u305? sonucu \f0 , \f1 iste\u287?i yapan kullan\u305?c\u305?ya g\f2\lang1033\'f6nderir.\par
\par
\b\f0\fs24\lang1055 JSF Nedir? \f2\lang1033\'c7\f0\lang1055 al\f1\u305?\'ba\f0 ma Prensibi Nedir?\b0\fs22\par
 JSF(Java Server Faces) java teknolojisi \f2\lang1033\'fc\f0\lang1055 zerine kurulmu\f1\'ba\f0  web uygulamalar\f1\u305?\f0  geli\f1\'ba\f0 tirilen MVC framework'd\f2\lang1033\'fc\f0\lang1055 r. JSF, Java Server Page(JSP) ile yapt\f1\u305?\u287?\u305?\f0 m\f1\u305?\f0 z i\f1\'ba\f0 lemleri basitle\f1\'ba\f0 tirmek ve web sayfalar\f1\u305?\f0 m\f1\u305?\f0 zda daha yeni \f2\lang1033\'f6\f0\lang1055 zellikler kullanabilmemiz i\f2\lang1033\'e7\f0\lang1055 in geli\f1\'ba\f0 tirilmi\f1\'ba\f0  bir k\f2\lang1033\'fc\f0\lang1055 t\f2\lang1033\'fc\f0\lang1055 phanedir. Haz\f1\u305?\f0 r bile\f1\'ba\f0 enler/etiketler ile yapmak istedi\f1\u287?\f0 imiz i\f1\'ba\f0 lemleri basit\f2\lang1033\'e7\f0\lang1055 e yapabilmekteyiz. \f2\lang1033\'dc\f0\lang1055 st seviye programlar yapmay\f1\u305?\f0  kolay hale getirmektedir. Java EE teknolojilerine kolayca entegre etmemiz de m\f2\lang1033\'fc\f0\lang1055 mk\f2\lang1033\'fc\f0\lang1055 nd\f2\lang1033\'fc\f0\lang1055 r.\tab\par
\par
\b\fs24 Session Nedir? Biz Toyota'da Nas\f1\u305?\f0 l Kullan\f1\u305?\f0 yoruz?\b0\fs22\par
 Uygulama \f2\lang1033\'fc\f0\lang1055 zerinde oturum a\f2\lang1033\'e7\f0\lang1055 m\f1\u305?\'ba\f0  kullan\f1\u305?\f0 c\f1\u305?\f0  bilgilerinin Server \f2\lang1033\'fc\f0\lang1055 zerinde tutulmas\f1\u305?\f0 na session denir. E\f1\u287?\f0 er cookie olarak tutsayd\f1\u305?\f0 k bu bilgiler kulln\f1\u305?\f0 c\f1\u305?\f0 n\f1\u305?\f0 n kulland\f1\u305?\u287?\u305?\f0  browser \f2\lang1033\'fc\f0\lang1055 zerinde tutulurdu. \par
\par
\b\fs24 Stateless Nedir?\par
\b0\fs22  Server taraf\f1\u305?nda client ile ilgili bir context veya Session tutulmaz. Client taraf\u305?ndan yap\u305?lan her \f0 istek\f1  Server\rquote\u305?n \f0 cevap\f1  verebilmesi i\f2\lang1033\'e7in gerekli bilgiyi ta\f1\'ba\u305?r, yani her t\f2\'fcrl\'fc \f0\lang1055 durum\f2\lang1033  client taraf\f1\u305?nda \f0\lang1055 yani browser'da \f1\lang1033 tutulur\par
\par
\b\f0\fs24\lang1055 Bamboo Nedir? Nexus Nedir? Ne i\f2\lang1033\'e7\f0\lang1055 in kullan\f1\u305?\f0 yoruz?\b0\fs22\par
 Bir proje \f2\lang1033\'fc\f0\lang1055 zerinde birden fazla yaz\f1\u305?\f0 l\f1\u305?\f0 mc\f1\u305?\f0 n\f1\u305?\f0 n ortak \f2\lang1033\'e7\f0\lang1055 al\f1\u305?\'ba\f0 mas\f1\u305?\f0 n\f1\u305?\f0  sa\f1\u287?\f0 layan git benzeri bir yap\f1\u305?\f0 d\f1\u305?\f0 r. Yaz\f1\u305?\f0 l\f1\u305?\f0 mc\f1\u305?\f0  proje \f2\lang1033\'fc\f0\lang1055 zerinde bir de\f1\u287?\f0 i\f1\'ba\f0 iklik veya ekleme yapt\f1\u305?\u287?\u305?\f0  zaman bunu sisteme y\f2\lang1033\'fc\f0\lang1055 kler , ve di\f1\u287?\f0 er yaz\f1\u305?\f0 l\f1\u305?\f0 mc\f1\u305?\f0 larda yap\f1\u305?\f0 lan bu de\f1\u287?\f0 i\f1\'ba\f0 ikli\f1\u287?\f0 i kendi projelerine dahil eder. \par
 Nexus ise yap\f1\u305?\f0 lan projenin \f2\lang1033\'e7\f0\lang1055 al\f1\u305?\'ba\f0 an versiyonlar\f1\u305?\f0 n\f1\u305?\f0 n depoland\f1\u305?\u287?\u305?\f0  ve payla\f1\'ba\u305?\f0 ld\f1\u305?\u287?\u305?\f0  depolard\f1\u305?\f0 r. Di\f1\u287?\f0 er kurumlar projenin son s\f2\lang1033\'fc\f0\lang1055 r\f2\lang1033\'fc\f0\lang1055 m\f2\lang1033\'fc\f0\lang1055 n\f2\lang1033\'fc\f0\lang1055  buradan \f2\lang1033\'e7\f0\lang1055 ekip, kendi sistemlerinde kullan\f1\u305?\f0 rlar. E\f1\u287?\f0 er kullan\f1\u305?\f0 lan son s\f2\lang1033\'fc\f0\lang1055 r\f2\lang1033\'fc\f0\lang1055 mde herhangi bir sorun \f2\lang1033\'e7\f1\lang1055\u305?\f0 karsa hemen bir \f2\lang1033\'f6\f0\lang1055 nceki, \f2\lang1033\'e7\f0\lang1055 al\f1\u305?\'ba\f0 an en son s\f2\lang1033\'fc\f0\lang1055 r\f2\lang1033\'fc\f0\lang1055 m indirilip kullan\f1\u305?\f0 l\f1\u305?\f0 r.\par
\par
\b\fs24 Toyota Kodlama Mimarisi?\b0\fs22  \par
 Toyota'da projeler \f2\lang1033\'fc\'e7\f0\lang1055  ana katmana b\f2\lang1033\'f6\f0\lang1055 l\f2\lang1033\'fc\f0\lang1055 n\f2\lang1033\'fc\f0\lang1055 r. Birinci katmanda projenin kullan\f1\u305?\f0 ld\f1\u305?\u287?\u305?\f0  b\f2\lang1033\'f6\f0\lang1055 lgeye g\f2\lang1033\'f6\f0\lang1055 re veritaban\f1\u305?\f0  bilgileri vb. bilgiler yer al\f1\u305?\f0 r. \f2\lang1033\'dc\'e7\'fc\f0\lang1055 nc\f2\lang1033\'fc\f0\lang1055  katmanda ise normal bir maven proje dizin yap\f1\u305?\f0 s\f1\u305?\f0  bulunur. \par
\par
\b\fs24 Dependcy \f1\u304?\f0 njection Nedir?\par
\b0\fs22  Ba\f1\u287?\u305?ml\u305?l\u305?k olu\'baturacak par\f2\lang1033\'e7alar\f1\u305?n ayr\u305?l\u305?p, bunlar\u305?n d\u305?\'baardan verilmesiyle sistem i\f2\'e7erisindeki ba\f1\u287?\u305?ml\u305?l\u305?\u287?\u305? minimize etme i\'balemidir\f0\lang1055 . Yani, temel olarak olu\f1\'baturaca\u287?\u305?\f0 m\f1\u305?\f0 z\f1  bir s\u305?n\u305?f i\f2\lang1033\'e7erisinde ba\f1\'baka bir s\u305?n\u305?f\u305?n nesnesini kullanacaksa\f0\lang1055 k\f1\lang1033  new anahtar s\f2\'f6zc\'fc\f1\u287?\f2\'fcyle olu\f1\'baturmama\f0\lang1055 m\f1\u305?\f0 z\f1\lang1033  gerekti\u287?ini s\f2\'f6yleyen bir yakla\f1\'ba\u305?md\u305?r. Gereken nesnenin ya Constructor\rquote dan ya da Setter metoduyla parametre olarak al\u305?nmas\u305? gerekti\u287?ini vurgulamaktad\u305?r. B\f2\'f6ylece iki s\f1\u305?n\u305?f\u305? birbirinden izole etmi\'ba oldu\u287?umuzu savunmaktad\u305?r. \f0\lang1055\par
\par
\b\fs24 Inversion Of Control Nedir?\par
\b0\fs22  Uygulama i\f2\lang1033\'e7erisindeki nesne yaratma s\'fcrecinin sizden al\f1\u305?nmas\u305? ve bunun bir \f2\'e7at\f1\u305?ya (framework) devredilmesine Inversion of Control denir.\f0\lang1055  Bu \f1\'ba\f0 ekilde kodumuz \f2\lang1033\'f6\f0\lang1055 zg\f2\lang1033\'fc\f0\lang1055 r olur. Yani s\f1\u305?\f0 n\f1\u305?\f0 flar\f1\u305?\f0  birbirine new anahtar s\f2\lang1033\'f6\f0\lang1055 zc\f2\lang1033\'fc\f1\lang1055\u287?\f2\lang1033\'fc\f0\lang1055  kullanarak ba\f1\u287?\f0 lamad\f1\u305?\u287?\u305?\f0 m\f1\u305?\f0 z i\f2\lang1033\'e7\f0\lang1055 in s\f1\u305?\f0 n\f1\u305?\f0 flar aras\f1\u305?\f0 ndaki ba\f1\u287?\f0 la\f1\'ba\u305?\f0 m kesilir. S\f1\u305?\f0 n\f1\u305?\f0 flar art\f1\u305?\f0 k \f2\lang1033\'fc\f0\lang1055 z\f2\lang1033\'fc\f0\lang1055 m\f2\lang1033\'fc\f0\lang1055  yiyen ve ba\f1\u287?\u305?\f0 n\f1\u305?\f0  sormayan bir moda b\f2\lang1033\'fc\f0\lang1055 r\f2\lang1033\'fc\f0\lang1055 n\f2\lang1033\'fc\f0\lang1055 rler.\par
 IoC bir tasar\f1\u305?\f0 m kal\f1\u305?\f0 b\f1\u305?\f0 d\f1\u305?\f0 r ve \f2\lang1033\'e7\f0\lang1055 o\f1\u287?\f0 u uygulama i\f2\lang1033\'e7\f0\lang1055 in uygun ve hayat kurtar\f1\u305?\f0 c\f1\u305?\f0 d\f1\u305?\f0 r.\par
\par
\b\fs24 Rest Servisleri, Post/Get/Delete/Put \f1\u304?\f0 le Api \f2\lang1033\'d6\f0\lang1055 rnekleri\b0\fs22\par
 Rest servis, client ile server aras\f1\u305?\f0 ndaki ileti\f1\'ba\f0 imi kompleks mimariler ile sa\f1\u287?\f0 lamak yerine, HTTP protokol\f2\lang1033\'fc\f0\lang1055  \f2\lang1033\'fc\f0\lang1055 zerinden basit ve hafif bir \f1\'ba\f0 ekilde sa\f1\u287?\f0 lamakt\f1\u305?\f0 r. Client \f2\lang1033\'fc\f0\lang1055 zerinden GET/POST gibi basit istekler ger\f2\lang1033\'e7\f0\lang1055 ekle\f1\'ba\f0 tirerek, XML veya JSON format\f1\u305?\f0 nda veriler al\f1\u305?\f0 p, bu verileri istedi\f1\u287?\f0 imiz gibi kullanabiliriz. \par
GET, veri almak i\f2\lang1033\'e7\f0\lang1055 in kullan\f1\u305?\f0 r\f1\u305?\f0 z. \par
POST, genellikle yeni bir veri eklemek i\f2\lang1033\'e7\f0\lang1055 in kullan\f1\u305?\f0 l\f1\u305?\f0 r. Ama g\f2\lang1033\'fc\f0\lang1055 ncelleme i\f1\'ba\f0 lemi yapmak i\f2\lang1033\'e7\f0\lang1055 inde kullanabiliriz.\par
PUT, g\f2\lang1033\'fc\f0\lang1055 ncelleme yapma ama\f2\lang1033\'e7\f0\lang1055 l\f1\u305?\f0  kullan\f1\u305?\f0 r\f1\u305?\f0 z.\par
DELETE , veri silme iste\f1\u287?\f0 i g\f2\lang1033\'f6\f0\lang1055 ndermek i\f2\lang1033\'e7\f0\lang1055 in kullan\f1\u305?\f0 r\f1\u305?\f0 z. \par
\par
\b\fs24 JPA/Hibernate Kavramlar\f1\u305?\f0 ?\b0\fs22\par
JPA , veri taban\f1\u305?\f0 ndaki tablolar\f1\u305?\f0 n Java s\f1\u305?\f0 n\f1\u305?\f0 flar\f1\u305?\f0  ile tutulmas\f1\u305?\f0 na ve uygulaman\f1\u305?\f0 n sonlanmas\f1\u305?\f0 ndan sonra verinin kal\f1\u305?\f0 c\f1\u305?\f0  olmas\f1\u305?\f0 n\f1\u305?\f0  sa\f1\u287?\f0 layan bir teknolojidir. JPA ile geli\f1\'ba\f0 tiriciler SQL komutlar\f1\u305?\f0  yerine direk olarak nesneler \f2\lang1033\'fc\f0\lang1055 zerinde \f2\lang1033\'e7\f0\lang1055 al\f1\u305?\'ba\f0 abilir, veritaban\f1\u305?\f0 nda verileri saklayabilir, g\f2\lang1033\'fc\f0\lang1055 ncelleyebilir veya veritaban\f1\u305?\f0 ndan verileri \f2\lang1033\'e7\f0\lang1055 ekebilir. Uygulama ile Veritaban\f1\u305?\f0  aras\f1\u305?\f0 nda arabirim noktas\f1\u305?\f0  olu\f1\'ba\f0 turur. \par
 JPA asl\f1\u305?\f0 nda bir standartt\f1\u305?\f0 r. Bunun \f2\lang1033\'fc\f0\lang1055 zerine bir\f2\lang1033\'e7\f0\lang1055 ok k\f2\lang1033\'fc\f0\lang1055 t\f2\lang1033\'fc\f0\lang1055 phane yaz\f1\u305?\f0 lm\f1\'ba\f0 t\f1\u305?\f0 r. Hibernate'de bu k\f2\lang1033\'fc\f0\lang1055 t\f2\lang1033\'fc\f0\lang1055 phanelerden biridir.\par
\par
\b\fs24 DTO/Domain/Service/Resource Katmanl\f1\u305?\f0  Mimarisi?\b0\fs22\par
\par
\b\fs24 JPQL/NamedQuery/Native Query Kavramlar\f1\u305?\f0 ?\b0\fs22\par
 JPQL, JPA i\f2\lang1033\'e7\f0\lang1055 in geli\f1\'ba\f0 tirilmi\f1\'ba\f0  veri sorgulama dilidir. Bu sorgulama dilini kullan\f1\u305?\f0 rken veri taban\f1\u305?\f0 ndaki tablo isimlerini kullanmak yerine , ili\f1\'ba\f0 kili oldu\f1\u287?\f0 u Java classlar\f1\u305?\f0 n\f1\u305?\f0 n isimlerini kullan\f1\u305?\f0 r\f1\u305?\f0 z. NamedQuery'ler ise JPQL dili kullan\f1\u305?\f0 larak olu\f1\'ba\f0 turulmu\f1\'ba\f0  sorgulard\f1\u305?\f0 r. Genelde sorgunun yap\f1\u305?\f0 laca\f1\u287?\u305?\f0  entity class'\f1\u305?\f0 n\f1\u305?\f0 n \f2\lang1033\'fc\f0\lang1055 zerinde @NamedQuery anotasyonu kullan\f1\u305?\f0 larak yap\f1\u305?\f0 l\f1\u305?\f0 r. Native Query'ler ise normal tablo isimleri kullan\f1\u305?\f0 larak olu\f1\'ba\f0 turulmu\f1\'ba\f0  SQL sorgular\f1\u305?\f0 d\f1\u305?\f0 r.\par
\par
\b\fs24 Generic Dao/Dao Life Cycle?\par
\b0\fs22  Bizim elimizde bir s\f2\lang1033\'fcr\'fc tablo varsa her tablo i\'e7in ayr\f1\u305? select,update,delete yazmaktan yorulabiliriz. \u304?\'bate burada Generic Dao devreye giriyor.\f0\lang1055  Generic Dao'da her tablo i\f2\lang1033\'e7\f0\lang1055 in gerekli olan klasik crud i\f1\'ba\f0 lemleri i\f2\lang1033\'e7\f0\lang1055 in gereken methodlar\f1\u305?\f0  tan\f1\u305?\f0 mlar\f1\u305?\f0 z. Daha sonras\f1\u305?\f0 nda Dao classlar\f1\u305?\f0 m\f1\u305?\f0 zda Generic Dao'yu implement ederiz. E\f1\u287?\f0 er istersek temel crud methodlar\f1\u305?\f0 n\f1\u305?\f0 n yan\f1\u305?\f0 na kendimize \f2\lang1033\'f6\f0\lang1055 zel methodlar da tan\f1\u305?\f0 mlayabiliriz.\par
\par
\b\fs24 Aspect Oriented Programming Nedir? Spring de Nas\f1\u305?\f0 l Kullan\f1\u305?\f0 l\f1\u305?\f0 r?\b0\fs22\par
  AOP; program\f1\u305?\f0 n \f2\lang1033\'e7\f0\lang1055 al\f1\u305?\'ba\f0 ma an\f1\u305?\f0 nda methot \f2\lang1033\'e7\f0\lang1055 a\f1\u287?\f0 r\f1\u305?\f0 s\f1\u305?\f0  yap\f1\u305?\f0 ld\f1\u305?\u287?\u305?\f0  zaman, method ba\f1\'ba\u305?\f0 nda , sonunda veya herhangi bir an\f1\u305?\f0 nda kesilip ba\f1\'ba\f0 ka bir yerdeki kod bloklar\f1\u305?\f0 n\f1\u305?\f0  \f2\lang1033\'e7\f0\lang1055 al\f1\u305?\'ba\f0 t\f1\u305?\f0 rmaya denilmektedir. Bu \f1\'ba\f0 ekilde her metot ba\f1\'ba\f0 lang\f1\u305?\f0 c\f1\u305?\f0 nda log tutma gibi benzeri i\f1\'ba\f0 lemleri yapt\f1\u305?\f0 rabiliriz. Spring'de ise kulland\f1\u305?\u287?\u305?\f0 m\f1\u305?\f0 z anotasyonlar AOP kullanarak \f2\lang1033\'e7\f0\lang1055 al\f1\u305?\'ba\f0 maktad\f1\u305?\f0 r. \f2\lang1033\'d6\f0\lang1055 rne\f1\u287?\f0 in Transactional anotasyonu methot ba\f1\'ba\f0 larken transaction begin yap\f1\u305?\f0 p , method sonland\f1\u305?\u287?\u305?\f0  zaman ise commit i\f1\'ba\f0 lemi yapmaktad\f1\u305?\f0 r. Dao katman\f1\u305?\f0 nda ise bizim yerimize veri taban\f1\u305?\f0 na ba\f1\u287?\f0 ant\f1\u305?\f0  a\f2\lang1033\'e7\f1\lang1055\u305?\f0 p kapatmaktad\f1\u305?\f0 r. \par
\par
\b\fs24 Rest Servisleri \f2\lang1033\'c7\f0\lang1055 al\f1\u305?\'ba\f0 ma Prensipleri?\b0\fs22\par
 Ana fikir asl\f1\u305?nda client-server aras\u305?nda ki veri al\u305?\'baveri\'baini SOAP, RPC gibi kompleks mimarilerle sa\u287?lamak yerine, HTTP protokol\f2\lang1033\'fc \'fczerinden sa\f1\u287?lamak. \f2\'c7\'fcnk\'fc zaten World Wide Web dedi\f1\u287?imiz yap\u305? HTTP protokol\f2\'fc \'fczerine kurulu. RESTful servisler SOAP, RPC\rquote nin aksine basit ve hafiftirler.\par
\f0\lang1055  \f2\lang1033 REST mimarisindeki \'f6nemli noktalardan biride her HTTP request\rquote inde yap\f1\u305?lmas\u305? istenilen i\'balemin HTTP Method\rquote lar\u305?yla\f0\lang1055  \f1\lang1033 ifade edilmesi. POST, PUT, DELETE ,GET gibi.\par
Rest servisler ;\par
Platform ba\u287?\u305?ms\u305?zlar. (Client\rquote\u305?n Windows, Server\rquote\u305?n Linux olmas\u305?n\u305?n hi\f2\'e7 bir \'f6nemi yok)\par
Dil ba\f1\u287?\u305?ms\u305?zlar .\par
HTTP \f2\'fczerinden \'e7al\f1\u305?\'ba\u305?yorlar.\par
Esnekler ve \f2\'e7ok kolay geni\f1\'baletilebilirler.\f0\lang1055\par
\b\fs24  \par
Maven Nedir?\b0\fs22\par
 Projenin ba\f1\u287?\u305?ml\u305? oldu\u287?u k\f2\lang1033\'fct\'fcphaneleri \f0\lang1055 bizim\f2\lang1033  yeri\f0\lang1055 mize\f2\lang1033  otomatik olarak projeye dahil \f0\lang1055 eder\f2\lang1033 .\f0\lang1055  \f2\lang1033\'d6\f0\lang1055 rne\f1\u287?\f0 in spring k\f2\lang1033\'fc\f0\lang1055 t\f2\lang1033\'fc\f0\lang1055 phanesini projemize dahil etmek istersek XML kodunu pom.xml dosyas\f1\u305?\f0 na eklememiz gerekiyor. Pom.xml dosyas\f1\u305?\f0  maven'\f1\u305?\f0 n ayar dosyas\f1\u305?\f0 d\f1\u305?\f0 r. Bu dosya \f2\lang1033\'fc\f0\lang1055 zerinden projemizin y\f2\lang1033\'f6\f0\lang1055 netimini sa\f1\u287?\f0 layabiliyoruz. \par
 Ayr\f1\u305?\f0 ca bir k\f2\lang1033\'fc\f0\lang1055 t\f2\lang1033\'fc\f0\lang1055 phane ba\f1\'ba\f0 ka k\f2\lang1033\'fc\f0\lang1055 t\f2\lang1033\'fc\f0\lang1055 phanelere ba\f1\u287?\u305?\f0 ml\f1\u305?\f0 ysa maven bu ba\f1\u287?\u305?\f0 ml\f1\u305?\f0  oldu\f1\u287?\f0 u k\f2\lang1033\'fc\f0\lang1055 t\f2\lang1033\'fc\f0\lang1055 phaneleri de indirir ve projeye dahil eder.\par
\par
\b\fs24 Solid Prensibi?\b0\fs22\par
Kod karma\f1\'ba\u305?\f0 kl\f1\u305?\u287?\u305?\f0 n\f1\u305?\f0 , tekrar eden kodlar\f1\u305?\f0  engellemek ve bir yaz\f1\u305?\f0 l\f1\u305?\f0 m\f1\u305?\f0 n ki\f1\'ba\f0 iden ba\f1\u287?\u305?\f0 ms\f1\u305?\f0 z olarak ilerlemesini sa\f1\u287?\f0 lamak i\f2\lang1033\'e7\f0\lang1055 in ortaya at\f1\u305?\f0 lm\f1\u305?\'ba\f0  prensiplerdir.\par
\b S\b0 ingle Responsibility    : Yaz\f1\u305?\f0 lan her s\f1\u305?\f0 n\f1\u305?\f0 f\f1\u305?\f0 n tek bir i\f1\'ba\f0 levi olacak.\tab\par
\b O\b0 pen/Close                   : Yaz\f1\u305?\f0 lan class geli\f1\'ba\f0 tirmeye a\f2\lang1033\'e7\f1\lang1055\u305?\f0 k , de\f1\u287?\f0 i\f1\'ba\f0 tirmeye kapal\f1\u305?\f0  olmal\f1\u305?\f0 d\f1\u305?\f0 r. Bunu                       sa\f1\u287?\f0 lamak i\f2\lang1033\'e7\f0\lang1055 in interfaceler kullanabiliriz.\par
\b L\b0 iskov\rquote s Substitution    : Alt s\f1\u305?n\u305?flardan olu\'baan nesnelerin \f2\lang1033\'fcst s\f1\u305?n\u305?flar\u305?n nesneleriyle yer de\u287?i\'batirdiklerinde ayn\u305? davran\u305?\'ba\u305? g\f2\'f6stermelidir.\f0\lang1055  Yani; t\f2\lang1033\'fcretilen s\f1\u305?n\u305?flar, t\f2\'fcreyen s\f1\u305?n\u305?flar\u305?n t\f2\'fcm \'f6zelliklerini kullanmak zorundad\f1\u305?r.\f0\lang1055\par
\b I\b0 nterface Segregation  : Nesneler yani bizim classlar\f1\u305?m\u305?z, ihtiya\f2\lang1033\'e7 duymad\f1\u305?klar\u305? metodlar\u305?n bulunduklar\u305? interfacelere ba\u287?l\u305? olmaya zorlanmamal\u305?d\u305?r.\f0\lang1055\par
\b D\b0 ependency Inversion : Y\f2\lang1033\'fcksek seviyeli s\f1\u305?n\u305?flar, d\f2\'fc\f1\'ba\f2\'fck seviyeli s\f1\u305?n\u305?flara ba\u287?l\u305? olmamal\u305?\f0\lang1055  \b (?)\b0\par
\par
\b\fs24 Tasar\f1\u305?\f0 m Kal\f1\u305?\f0 plar\f1\u305?\f0  Nelerdir? Projede Buldu\f1\u287?\f0 unuz Hangi Patternlar var?\b0\fs22\par
Bir program\f1\u305?\f0  yazarken nesnelerin nas\f1\u305?\f0 l ileti\f1\'ba\f0 im kuraca\f1\u287?\u305?\f0 n\f1\u305?\f0  tasarlarken kulland\f1\u305?\u287?\u305?\f0 m\f1\u305?\f0 z yap\f1\u305?\f0 lar. \f2\lang1033\'d6\f0\lang1055 rne\f1\u287?\f0 in spring projelerinde ba\f1\u287?\u305?\f0 ml\f1\u305?\f0 l\f1\u305?\f0 k y\f2\lang1033\'f6\f0\lang1055 netiminde kullan\f1\u305?\f0 lan Inversion Of Control(IoC) bir tasar\f1\u305?\f0 m kal\f1\u305?\f0 b\f1\u305?\f0 d\f1\u305?\f0 r.\par
\par
\b\f1\fs24\u304?\f0 nterface'in Kullan\f1\u305?\f0 m Amac\f1\u305?\f0  Nedir?\b0\fs22\par
 Projemizin esnek bir yap\f1\u305?\f0 ya sahip olmas\f1\u305?\f0 n\f1\u305?\f0  sa\f1\u287?\f0 lamak i\f2\lang1033\'e7\f0\lang1055 in kullan\f1\u305?\f0 r\f1\u305?\f0 z. Sonradan d\f2\lang1033\'fc\f0\lang1055 zeltme ve eklemeler yapmak i\f2\lang1033\'e7\f0\lang1055 in kolayl\f1\u305?\f0 k sa\f1\u287?\f0 lar. \par
\par
\b\fs24 ManyToOne ve OneToOne \f1\u304?\f0 li\f1\'ba\f0 ki?\b0\fs22\par
Veri taban\f1\u305?\f0  tasarlarken kulland\f1\u305?\u287?\u305?\f0 m\f1\u305?\f0 z ili\f1\'ba\f0 kilerdir. OneToOne ili\f1\'ba\f0 ki bire-bir ili\f1\'ba\f0 kidir. Bir \f2\lang1033\'fc\f0\lang1055 niversitenin bir tane rekt\f2\lang1033\'f6\f0\lang1055 r\f2\lang1033\'fc\f0\lang1055  vard\f1\u305?\f0 r. Bir rekt\f2\lang1033\'f6\f0\lang1055 r sadece bir \f2\lang1033\'fc\f0\lang1055 niversiteyi y\f2\lang1033\'f6\f0\lang1055 netir. ManyToOne ili\f1\'ba\f0 ki \f2\lang1033\'c7\f0\lang1055 oka-Bir ili\f1\'ba\f0 kidir. Bir aile hekimini bir den fazla ki\f1\'ba\f0 iye bakabilir. Bir ki\f1\'ba\f0 inin bir tane aile hekimi vard\f1\u305?\f0 r. Bunun gibi ManyToMany , OneToMany ili\f1\'ba\f0 kilerde vard\f1\u305?\f0 r.\f2\lang1033\par
\par
\b\f0\fs24\lang1055 Cascade ve FetchTypes?\b0\fs22  \par
 Java s\f1\u305?n\u305?flar\u305?m\u305?zdaki ili\'bakilerin davran\u305?\'balar\u305?n\u305? cascade niteli\u287?ini kullanarak ayarlar\u305?z\f0 . Bir de\f1\u287?er silinirse o veri ile ili\'bakili olan kay\u305?tlar\u305?n etkilenmesini ya da etkilenmemesi i\'balemlerini Java nesneleri olarak y\f2\lang1033\'f6netilmesini sa\f1\u287?lamaktay\u305?z.\f0\lang1055  Sadece silme i\f1\'ba\f0 lemlerinde de\f1\u287?\f0 il ekleme, g\f2\lang1033\'fc\f0\lang1055 ncelleme gibi i\f1\'ba\f0 lemlerde de cascade kullanabiliriz.\par
 Fetchtype entity'ler aras\f1\u305?\f0 ndaki ili\f1\'ba\f0 kilerde verinin direk olarak getirilip getirilmemesi olaylar\f1\u305?\f0 d\f1\u305?\f0 r. E\f1\u287?\f0 er LAZY olarak y\f2\lang1033\'fc\f0\lang1055 klersek as\f1\u305?\f0 l nesne \f2\lang1033\'e7\f0\lang1055 a\f1\u287?\u305?\f0 r\f1\u305?\f0 m\f1\u305?\f0  sonras\f1\u305?\f0  lazy ili\f1\'ba\f0 kili nesnelerden bilgi getirilmez. EAGER olarak y\f2\lang1033\'fc\f0\lang1055 klersek as\f1\u305?\f0 l nesne \f2\lang1033\'e7\f0\lang1055 a\f1\u287?\f0 r\f1\u305?\f0 m\f1\u305?\f0  ile birlikte ili\f1\'ba\f0 kili nesne bilgiside getirilir.  \par
\par
\par
\par
\par
REST Apilerde D\f2\lang1033\'f6n\'fclen HTTP Status Kodlar\f1\u305? (Yayg\u305?n Kullan\u305?lanlar)\par
{{\field{\*\fldinst{HYPERLINK http://www.obenplus.com/blog/rest-api-nedir-nasil-kullanilir/ }}{\fldrslt{http://www.obenplus.com/blog/rest-api-nedir-nasil-kullanilir/\ul0\cf0}}}}\f0\fs22\lang1055\par
\par
\par
\par
\par
\par
\par
\par
\par
\f2\lang31\par
}
 